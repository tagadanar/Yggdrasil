{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.base.json",
    "ecmaVersion": 2021,
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "import",
    "jsdoc",
    "security",
    "sonarjs"
  ],
  "extends": [
    "eslint:recommended",
    "@typescript-eslint/recommended",
    "@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
    "plugin:jsdoc/recommended",
    "plugin:security/recommended",
    "plugin:sonarjs/recommended"
  ],
  "rules": {
    // TypeScript rules
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unused-vars": [
      "error", 
      { 
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/strict-boolean-expressions": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-misused-promises": "error",
    
    // Import rules
    "import/order": [
      "error", 
      {
        "groups": [
          "builtin",
          "external", 
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": { 
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/no-unresolved": "error",
    "import/no-cycle": "error",
    "import/no-unused-modules": [
      "error",
      {
        "unusedExports": true
      }
    ],
    
    // JSDoc rules
    "jsdoc/require-jsdoc": [
      "error", 
      {
        "require": {
          "FunctionDeclaration": true,
          "MethodDefinition": true,
          "ClassDeclaration": true,
          "ArrowFunctionExpression": false,
          "FunctionExpression": false
        },
        "contexts": [
          "TSInterfaceDeclaration",
          "TSTypeAliasDeclaration"
        ]
      }
    ],
    "jsdoc/require-param-description": "error",
    "jsdoc/require-returns-description": "error",
    "jsdoc/check-param-names": "error",
    "jsdoc/check-tag-names": "error",
    "jsdoc/check-types": "error",
    
    // Security rules
    "security/detect-object-injection": "warn",
    "security/detect-non-literal-regexp": "warn",
    "security/detect-unsafe-regex": "error",
    "security/detect-buffer-noassert": "error",
    "security/detect-child-process": "warn",
    "security/detect-disable-mustache-escape": "error",
    "security/detect-eval-with-expression": "error",
    "security/detect-no-csrf-before-method-override": "error",
    "security/detect-non-literal-fs-filename": "warn",
    "security/detect-non-literal-require": "warn",
    "security/detect-possible-timing-attacks": "warn",
    "security/detect-pseudoRandomBytes": "error",
    
    // Code quality rules (SonarJS)
    "sonarjs/cognitive-complexity": ["error", 15],
    "sonarjs/no-duplicate-string": ["error", 5],
    "sonarjs/no-identical-functions": "error",
    "sonarjs/no-small-switch": "error",
    "sonarjs/no-redundant-boolean": "error",
    "sonarjs/no-unused-collection": "error",
    "sonarjs/no-useless-catch": "error",
    "sonarjs/prefer-immediate-return": "error",
    "sonarjs/prefer-object-literal": "error",
    "sonarjs/prefer-single-boolean-return": "error",
    
    // General code quality
    "no-console": "warn",
    "no-debugger": "error",
    "no-alert": "error",
    "no-var": "error",
    "prefer-const": "error",
    "prefer-arrow-callback": "error",
    "arrow-spacing": "error",
    "no-trailing-spaces": "error",
    "eol-last": "error",
    "comma-dangle": ["error", "always-multiline"],
    "semi": ["error", "always"],
    "quotes": ["error", "single", { "avoidEscape": true }],
    
    // Complexity rules
    "complexity": ["error", 10],
    "max-depth": ["error", 4],
    "max-lines": ["error", 500],
    "max-lines-per-function": ["error", 50],
    "max-params": ["error", 5]
  },
  "overrides": [
    {
      "files": ["**/*.test.ts", "**/*.spec.ts", "**/__tests__/**/*.ts"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "jsdoc/require-jsdoc": "off",
        "sonarjs/no-duplicate-string": "off",
        "max-lines-per-function": "off"
      }
    },
    {
      "files": ["**/types/**/*.ts"],
      "rules": {
        "jsdoc/require-jsdoc": "off"
      }
    }
  ],
  "env": {
    "node": true,
    "es2021": true,
    "jest": true
  },
  "ignorePatterns": [
    "node_modules/",
    "dist/",
    "coverage/",
    "*.d.ts"
  ]
}